{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{203:function(t,e,a){\"use strict\";a.r(e);var l=a(6),n=(a(24),a(188),a(187));class i extends n.a{constructor(){super(...arguments),Object(l.a)(this,\"getFilterGraphQL\",t=>{let{path:e,type:a,value:l}=t;const n=\"is\"===a?e:\"\".concat(e,\"_\").concat(a);let i=l.replace(/\\s/g,\"\");return[\"in\",\"not_in\"].includes(a)&&(i=\"[\".concat(i,\"]\")),\"\".concat(n,\": \").concat(i)}),Object(l.a)(this,\"getFilterLabel\",t=>{let{label:e,type:a}=t;const l=[\"in\",\"not_in\"].includes(a)?\" (comma separated)\":\"\";return\"\".concat(this.label,\" \").concat(e.toLowerCase()).concat(l)}),Object(l.a)(this,\"formatFilter\",t=>{let{label:e,type:a,value:l}=t;return\"\".concat(this.getFilterLabel({label:e,type:a}),': \"').concat(l.replace(/\\s/g,\"\"),'\"')}),Object(l.a)(this,\"serialize\",t=>{const e=t[this.path];return\"number\"==typeof e?e:\"string\"==typeof e&&e.length>0?parseInt(e,10):null}),Object(l.a)(this,\"getFilterTypes\",()=>[{type:\"is\",label:\"Is exactly\",getInitialValue:()=>\"\"},{type:\"not\",label:\"Is not exactly\",getInitialValue:()=>\"\"},{type:\"gt\",label:\"Is greater than\",getInitialValue:()=>\"\"},{type:\"lt\",label:\"Is less than\",getInitialValue:()=>\"\"},{type:\"gte\",label:\"Is greater than or equal to\",getInitialValue:()=>\"\"},{type:\"lte\",label:\"Is less than or equal to\",getInitialValue:()=>\"\"},{type:\"in\",label:\"Is one of\",getInitialValue:()=>\"\"},{type:\"not_in\",label:\"Is not one of\",getInitialValue:()=>\"\"}])}}e.default=i}}]);","extractedComments":[]}