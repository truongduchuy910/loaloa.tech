{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\n\n/**\n * Utils\n */\nvar removeElementByIds = function removeElementByIds(ids) {\n  ids.forEach(function (id) {\n    var element = document.getElementById(id);\n\n    if (element && element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  });\n};\n/**\n * Messenger Chat Plugin\n */\n\n\nvar MessengerChat =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MessengerChat, _Component);\n\n  function MessengerChat(props) {\n    var _this;\n\n    _classCallCheck(this, MessengerChat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessengerChat).call(this, props));\n    _this.setFbAsyncInit = _this.setFbAsyncInit.bind(_assertThisInitialized(_this));\n    _this.reloadSDKAsynchronously = _this.reloadSDKAsynchronously.bind(_assertThisInitialized(_this));\n    _this.loadSDKAsynchronously = _this.loadSDKAsynchronously.bind(_assertThisInitialized(_this));\n    _this.createMarkup = _this.createMarkup.bind(_assertThisInitialized(_this));\n    _this.controlPlugin = _this.controlPlugin.bind(_assertThisInitialized(_this));\n    _this.subscribeEvents = _this.subscribeEvents.bind(_assertThisInitialized(_this));\n    _this.removeFacebookSDK = _this.removeFacebookSDK.bind(_assertThisInitialized(_this));\n    _this.state = {\n      fbLoaded: false,\n      shouldShowDialog: undefined\n    };\n    return _this;\n  }\n\n  _createClass(MessengerChat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setFbAsyncInit();\n      this.reloadSDKAsynchronously();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.pageId !== this.props.pageId || // prevProps.appId !== this.props.appId ||\n      prevProps.shouldShowDialog !== this.props.shouldShowDialog || prevProps.htmlRef !== this.props.htmlRef || prevProps.minimized !== this.props.minimized || prevProps.themeColor !== this.props.themeColor || prevProps.loggedInGreeting !== this.props.loggedInGreeting || prevProps.loggedOutGreeting !== this.props.loggedOutGreeting || prevProps.greetingDialogDisplay !== this.props.greetingDialogDisplay || prevProps.greetingDialogDelay !== this.props.greetingDialogDelay || prevProps.autoLogAppEvents !== this.props.autoLogAppEvents || prevProps.xfbml !== this.props.xfbml || prevProps.version !== this.props.version || prevProps.language !== this.props.language) {\n        this.setFbAsyncInit();\n        this.reloadSDKAsynchronously();\n      }\n    }\n  }, {\n    key: \"setFbAsyncInit\",\n    value: function setFbAsyncInit() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoLogAppEvents = _this$props.autoLogAppEvents,\n          xfbml = _this$props.xfbml,\n          version = _this$props.version;\n\n      window.fbAsyncInit = function () {\n        window.FB.init({\n          // appId,\n          autoLogAppEvents: autoLogAppEvents,\n          xfbml: xfbml,\n          version: \"v\".concat(version)\n        });\n\n        _this2.setState({\n          fbLoaded: true\n        });\n      };\n    }\n  }, {\n    key: \"loadSDKAsynchronously\",\n    value: function loadSDKAsynchronously() {\n      // const { language } = this.props\n\n      /* eslint-disable */\n      (function (d, s, id) {\n        var js,\n            fjs = d.getElementsByTagName(s)[0];\n\n        if (d.getElementById(id)) {\n          return;\n        }\n\n        js = d.createElement(s);\n        js.id = id;\n        js.src = \"https://connect.facebook.net/vi_VN/sdk/xfbml.customerchat.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      })(document, \"script\", \"facebook-jssdk\");\n      /* eslint-enable */\n\n    }\n  }, {\n    key: \"removeFacebookSDK\",\n    value: function removeFacebookSDK() {\n      removeElementByIds([\"facebook-jssdk\", \"fb-root\"]);\n      delete window.FB;\n    }\n  }, {\n    key: \"reloadSDKAsynchronously\",\n    value: function reloadSDKAsynchronously() {\n      this.removeFacebookSDK();\n      this.loadSDKAsynchronously();\n    }\n  }, {\n    key: \"controlPlugin\",\n    value: function controlPlugin() {\n      var shouldShowDialog = this.props.shouldShowDialog;\n\n      if (shouldShowDialog) {\n        window.FB.CustomerChat.showDialog();\n      } else {\n        window.FB.CustomerChat.hideDialog();\n      }\n    }\n  }, {\n    key: \"subscribeEvents\",\n    value: function subscribeEvents() {\n      var _this$props2 = this.props,\n          onCustomerChatDialogShow = _this$props2.onCustomerChatDialogShow,\n          onCustomerChatDialogHide = _this$props2.onCustomerChatDialogHide;\n\n      if (onCustomerChatDialogShow) {\n        window.FB.Event.subscribe(\"customerchat.dialogShow\", onCustomerChatDialogShow);\n      }\n\n      if (onCustomerChatDialogHide) {\n        window.FB.Event.subscribe(\"customerchat.dialogHide\", onCustomerChatDialogHide);\n      }\n    }\n  }, {\n    key: \"createMarkup\",\n    value: function createMarkup() {\n      var _this$props3 = this.props,\n          pageId = _this$props3.pageId,\n          htmlRef = _this$props3.htmlRef,\n          minimized = _this$props3.minimized,\n          themeColor = _this$props3.themeColor,\n          loggedInGreeting = _this$props3.loggedInGreeting,\n          loggedOutGreeting = _this$props3.loggedOutGreeting,\n          greetingDialogDisplay = _this$props3.greetingDialogDisplay,\n          greetingDialogDelay = _this$props3.greetingDialogDelay;\n      var refAttribute = htmlRef !== undefined ? \"ref=\\\"\".concat(htmlRef, \"\\\"\") : \"\";\n      var minimizedAttribute = minimized !== undefined ? \"minimized=\\\"\".concat(minimized, \"\\\"\") : \"\";\n      var themeColorAttribute = themeColor !== undefined ? \"theme_color=\\\"\".concat(themeColor, \"\\\"\") : \"\";\n      var loggedInGreetingAttribute = loggedInGreeting !== undefined ? \"logged_in_greeting=\\\"\".concat(loggedInGreeting, \"\\\"\") : \"\";\n      var loggedOutGreetingAttribute = loggedOutGreeting !== undefined ? \"logged_out_greeting=\\\"\".concat(loggedOutGreeting, \"\\\"\") : \"\";\n      var greetingDialogDisplayAttribute = greetingDialogDisplay !== undefined ? \"greeting_dialog_display=\\\"\".concat(greetingDialogDisplay, \"\\\"\") : \"\";\n      var greetingDialogDelayAttribute = greetingDialogDelay !== undefined ? \"greeting_dialog_delay=\\\"\".concat(greetingDialogDelay, \"\\\"\") : \"\";\n      return {\n        __html: \"<div\\n             class=\\\"fb-customerchat\\\"\\n             page_id=\\\"\".concat(pageId, \"\\\"\\n             \").concat(refAttribute, \"\\n             \").concat(minimizedAttribute, \"\\n             \").concat(themeColorAttribute, \"\\n             \").concat(loggedInGreetingAttribute, \"\\n             \").concat(loggedOutGreetingAttribute, \"\\n             \").concat(greetingDialogDisplayAttribute, \"\\n             \").concat(greetingDialogDelayAttribute, \"\\n           ></div>\")\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          fbLoaded = _this$state.fbLoaded,\n          shouldShowDialog = _this$state.shouldShowDialog;\n\n      if (fbLoaded && shouldShowDialog !== this.props.shouldShowDialog) {\n        document.addEventListener(\"DOMNodeInserted\", function (event) {\n          var element = event.target;\n\n          if (element.className && typeof element.className === \"string\" && element.className.includes(\"fb_dialog\")) {\n            _this3.controlPlugin();\n          }\n        }, false);\n        this.subscribeEvents();\n      } // Add a random key to rerender. Reference:\n      // https://stackoverflow.com/questions/30242530/dangerouslysetinnerhtml-doesnt-update-during-render\n\n\n      return __jsx(\"div\", {\n        key: Date(),\n        dangerouslySetInnerHTML: this.createMarkup()\n      });\n    }\n  }]);\n\n  return MessengerChat;\n}(Component);\n\n_defineProperty(MessengerChat, \"defaultProps\", {\n  shouldShowDialog: false,\n  htmlRef: undefined,\n  minimized: undefined,\n  themeColor: undefined,\n  loggedInGreeting: undefined,\n  loggedOutGreeting: undefined,\n  greetingDialogDisplay: undefined,\n  greetingDialogDelay: undefined,\n  autoLogAppEvents: true,\n  xfbml: true,\n  version: \"6.0\",\n  onCustomerChatDialogShow: undefined,\n  onCustomerChatDialogHide: undefined\n});\n\nexport default MessengerChat;","map":null,"metadata":{},"sourceType":"module"}