{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AllCungs from \"../cungs/allCungs\";\nimport AllCungVis from \"../cungVis/allCungVis\";\nimport AllTinhs from \"../tinhs/allTinhs\";\nimport AllPhuTinhs from \"../phuTinhs/allPhuTinhs\";\nimport { useState } from \"react\";\nimport request from \"../config/request\";\nimport cookie from \"js-cookie\";\nexport default function createKetQua({\n  allCungs = [],\n  allCungVis = [],\n  allTinhs = [],\n  allPhuTinhs = [],\n  onCreate\n}) {\n  function idOnly(values = []) {\n    let temp = [];\n    values.forEach(tinhs => {\n      if (tinhs) tinhs.forEach(tinh => {\n        temp.push({\n          id: tinh.id\n        });\n      });\n    });\n    return temp;\n  }\n\n  let {\n    0: createButtonStatus,\n    1: setCreateButtonStatus\n  } = useState(\"Xem Kết Quả\");\n  let {\n    0: selectedCung,\n    1: setSelectedCung\n  } = useState();\n  let {\n    0: selectedCungVi,\n    1: setSelectedCungVi\n  } = useState();\n  let {\n    0: selectedTinhs,\n    1: setSelectedTinhs\n  } = useState([]);\n  let {\n    0: selectedPhuTinhs,\n    1: setSelectedPhuTinhs\n  } = useState([]);\n  let {\n    0: selectedPhuTinhs1,\n    1: setSelectedPhuTinhs1\n  } = useState([]);\n  let {\n    0: selectedPhuTinhs2,\n    1: setSelectedPhuTinhs2\n  } = useState([]);\n  let {\n    0: selectedPhuTinhs3,\n    1: setSelectedPhuTinhs3\n  } = useState([]);\n  let {\n    0: selectedPhuTinhs4,\n    1: setSelectedPhuTinhs4\n  } = useState([]);\n  let {\n    0: selectedPhuTinhs5,\n    1: setSelectedPhuTinhs5\n  } = useState([]);\n  let {\n    0: label1,\n    1: setLabel1\n  } = useState(false);\n  let {\n    0: label2,\n    1: setLabel2\n  } = useState(false);\n  let {\n    0: label3,\n    1: setLabel3\n  } = useState(false);\n  let {\n    0: label4,\n    1: setLabel4\n  } = useState(false);\n  let {\n    0: label5,\n    1: setLabel5\n  } = useState(false);\n  let variables = {\n    selectedCung,\n    selectedCungVi,\n    selectedTinhs: idOnly([selectedTinhs]),\n    selectedPhuTinhs: idOnly([selectedPhuTinhs, selectedPhuTinhs1, selectedPhuTinhs2, selectedPhuTinhs3, selectedPhuTinhs4, selectedPhuTinhs5])\n  }; // console.log(variables);\n  // functions\n\n  async function createKetQua() {\n    setCreateButtonStatus(\"Vui lòng chờ...\");\n    const query = `mutation(\n      $selectedCung: CungWhereUniqueInput\n      $selectedCungVi: CungViWhereUniqueInput\n      $selectedTinhs: [TinhWhereUniqueInput]\n      $selectedPhuTinhs: [PhuTinhWhereUniqueInput]\n  ) {\n      createKetQua(\n      data: {\n          cung: { connect: $selectedCung }\n          cungVi: { connect: $selectedCungVi}\n          chinhTinh: { connect: $selectedTinhs, disconnectAll: true }\n          phuTinh: { connect: $selectedPhuTinhs, disconnectAll: true }\n      }\n      ) {\n        id\n      }\n  }`;\n    const {\n      data,\n      errors\n    } = await request({\n      body: {\n        query,\n        variables\n      }\n    });\n    setCreateButtonStatus(\"Xem kết Quả\");\n    if (onCreate) onCreate({\n      data,\n      errors\n    });\n  }\n\n  return __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    justify: \"center\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(AllCungs, {\n    allCungs: allCungs,\n    onChange: value => {\n      if (value) {\n        setLabel1(value.tieuDe1);\n        setLabel2(value.tieuDe2);\n        setLabel3(value.tieuDe3);\n        setLabel4(value.tieuDe4);\n        setLabel5(value.tieuDe5);\n        setSelectedCung({\n          id: value.id\n        });\n      }\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(AllCungVis, {\n    allCungVis: allCungVis,\n    onSelect: value => {\n      if (value) setSelectedCungVi({\n        id: value.id\n      });\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(AllTinhs, {\n    allTinhs: allTinhs,\n    onSelect: values => setSelectedTinhs(values)\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(AllPhuTinhs, {\n    allPhuTinhs: allPhuTinhs,\n    onSelect: values => setSelectedPhuTinhs(values)\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(AllPhuTinhs, {\n    label: label1,\n    allPhuTinhs: allPhuTinhs,\n    onSelect: values => setSelectedPhuTinhs1(values)\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(AllPhuTinhs, {\n    label: label2,\n    allPhuTinhs: allPhuTinhs,\n    onSelect: values => setSelectedPhuTinhs2(values)\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(AllPhuTinhs, {\n    label: label3,\n    allPhuTinhs: allPhuTinhs,\n    onSelect: values => setSelectedPhuTinhs3(values)\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(AllPhuTinhs, {\n    label: label4,\n    allPhuTinhs: allPhuTinhs,\n    onSelect: values => setSelectedPhuTinhs4(values)\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(AllPhuTinhs, {\n    label: label5,\n    allPhuTinhs: allPhuTinhs,\n    onSelect: values => setSelectedPhuTinhs5(values)\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4\n  }, __jsx(Button, {\n    style: {\n      backgroundColor: \"#76552a\",\n      color: \"#dab857\",\n      marginTop: 21,\n      marginBottom: 21\n    },\n    fullWidth: true,\n    onClick: () => createKetQua()\n  }, createButtonStatus)));\n}","map":null,"metadata":{},"sourceType":"module"}