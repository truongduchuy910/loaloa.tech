{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/truongduchuy910/apps/tuvi/app/pages/login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Layout from \"../src/Layout\";\nimport LightBoard from \"../src/LightBoard\";\nimport request from \"../components/config/request\";\nimport { login } from \"../utils/auth\";\nimport Link from \"../src/Link\";\nimport Logo from \"../src/logo\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction Login() {\n  var _useState = useState(false),\n      username = _useState[0],\n      setUserName = _useState[1];\n\n  var _useState2 = useState(false),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"Đăng nhập\"),\n      buttonStatus = _useState3[0],\n      setButtonStatus = _useState3[1];\n\n  function loginButtonClick() {\n    var response, authenticateUserWithPassword, token, _authenticateUserWith, id, email, isAdmin, isSupporter, isCustomer;\n\n    return _regeneratorRuntime.async(function loginButtonClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setButtonStatus(\"Vui lòng đợi...\");\n\n            if (!(username.length > 5 && password.length > 5)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(request({\n              body: {\n                query: \"mutation($username: String, $password: String) {\\n      authenticateUserWithPassword(email: $username, password: $password) {\\n      token\\n      item {\\n          id\\n          email\\n          isAdmin\\n          isSupporter\\n          isCustomer\\n      }\\n      }}\",\n                variables: {\n                  username: username,\n                  password: password\n                }\n              }\n            }));\n\n          case 4:\n            response = _context.sent;\n            authenticateUserWithPassword = response.data.authenticateUserWithPassword;\n\n            if (authenticateUserWithPassword) {\n              token = authenticateUserWithPassword.token, _authenticateUserWith = authenticateUserWithPassword.item, id = _authenticateUserWith.id, email = _authenticateUserWith.email, isAdmin = _authenticateUserWith.isAdmin, isSupporter = _authenticateUserWith.isSupporter, isCustomer = _authenticateUserWith.isCustomer;\n              setButtonStatus(\"Đăng nhập thành công!\");\n              login({\n                token: token,\n                id: id,\n                email: email,\n                isAdmin: isAdmin,\n                isSupporter: isSupporter,\n                isCustomer: isCustomer\n              });\n            } else {\n              setButtonStatus(\"Tài khoản không tồn tại.\");\n            }\n\n            _context.next = 10;\n            break;\n\n          case 9:\n            setButtonStatus(\"Kiểm tra và thử lại\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(Container, {\n    maxWidth: \"sm\",\n    style: {\n      padding: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(LightBoard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    style: {\n      marginBottom: 34\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"\\u0110\\u0102NG K\\xDD T\\xC0I KHO\\u1EA2N \\u0110\\u1EC2 KH\\xC1M PH\\xC1 TH\\u1EBE GI\\u1EDAI HUY\\u1EC0N B\\xCD\")), __jsx(\"form\", {\n    noValidate: true,\n    autoComplete: \"on\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"username\",\n    label: \"T\\xEAn \\u0111\\u0103ng nh\\u1EADp\",\n    onChange: function onChange(e) {\n      setUserName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"password\",\n    label: \"M\\u1EADt kh\\u1EA9u\",\n    type: \"password\",\n    onChange: function onChange(e) {\n      setPassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(Button, {\n    style: {\n      backgroundColor: \"#76552a\",\n      color: \"#dab857\",\n      marginTop: 21,\n      marginBottom: 21\n    },\n    fullWidth: true // variant=\"outlined\"\n    ,\n    onClick: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(loginButtonClick());\n\n            case 2:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, buttonStatus)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"\\u0110\\u0103ng k\\xFD\"))))))));\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/truongduchuy910/apps/tuvi/app/pages/login.js"],"names":["useState","Grid","TextField","Button","Container","Layout","LightBoard","request","login","Link","Logo","Typography","Login","username","setUserName","password","setPassword","buttonStatus","setButtonStatus","loginButtonClick","length","body","query","variables","response","authenticateUserWithPassword","data","token","item","id","email","isAdmin","isSupporter","isCustomer","padding","marginBottom","e","target","value","backgroundColor","color","marginTop"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Layout from \"../src/Layout\";\nimport LightBoard from \"../src/LightBoard\";\nimport request from \"../components/config/request\";\nimport { login } from \"../utils/auth\";\nimport Link from \"../src/Link\";\nimport Logo from \"../src/logo\";\nimport Typography from \"@material-ui/core/Typography\";\nfunction Login() {\n  const [username, setUserName] = useState(false);\n  const [password, setPassword] = useState(false);\n  const [buttonStatus, setButtonStatus] = useState(\"Đăng nhập\");\n  async function loginButtonClick() {\n    setButtonStatus(\"Vui lòng đợi...\");\n    if (username.length > 5 && password.length > 5) {\n      let response = await request({\n        body: {\n          query: `mutation($username: String, $password: String) {\n      authenticateUserWithPassword(email: $username, password: $password) {\n      token\n      item {\n          id\n          email\n          isAdmin\n          isSupporter\n          isCustomer\n      }\n      }}`,\n          variables: {\n            username,\n            password\n          }\n        }\n      });\n\n      let {\n        data: { authenticateUserWithPassword }\n      } = response;\n      if (authenticateUserWithPassword) {\n        let {\n          token,\n          item: { id, email, isAdmin, isSupporter, isCustomer }\n        } = authenticateUserWithPassword;\n        setButtonStatus(\"Đăng nhập thành công!\");\n        login({ token, id, email, isAdmin, isSupporter, isCustomer });\n      } else {\n        setButtonStatus(\"Tài khoản không tồn tại.\");\n      }\n    } else {\n      setButtonStatus(\"Kiểm tra và thử lại\");\n    }\n  }\n  return (\n    <Layout>\n      <Container maxWidth=\"sm\" style={{ padding: 8 }}>\n        <LightBoard>\n          <Grid container spacing={1} justify=\"center\">\n            <Grid item xs={12} md={10}>\n              <Logo />\n            </Grid>\n            <Grid item>\n              <Typography variant=\"body1\" style={{ marginBottom: 34 }}>\n                ĐĂNG KÝ TÀI KHOẢN ĐỂ KHÁM PHÁ THẾ GIỚI HUYỀN BÍ\n              </Typography>\n            </Grid>\n            <form noValidate autoComplete=\"on\">\n              <Grid container justify=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    id=\"username\"\n                    label=\"Tên đăng nhập\"\n                    onChange={e => {\n                      setUserName(e.target.value);\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    id=\"password\"\n                    label=\"Mật khẩu\"\n                    type=\"password\"\n                    onChange={e => {\n                      setPassword(e.target.value);\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Button\n                    style={{\n                      backgroundColor: \"#76552a\",\n                      color: \"#dab857\",\n                      marginTop: 21,\n                      marginBottom: 21\n                    }}\n                    fullWidth\n                    // variant=\"outlined\"\n                    onClick={async () => await loginButtonClick()}\n                  >\n                    {buttonStatus}\n                  </Button>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Link href=\"/signup\">Đăng ký</Link>\n                </Grid>\n              </Grid>\n            </form>\n          </Grid>\n        </LightBoard>\n      </Container>\n    </Layout>\n  );\n}\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}