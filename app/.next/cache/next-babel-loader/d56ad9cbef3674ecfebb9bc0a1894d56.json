{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { withAuthSync } from \"../utils/auth\";\nimport cookie from \"js-cookie\";\nimport Layout from \"../src/Layout\";\nimport AllMessages from \"../components/messages/allMessages\";\nimport CreateMessage from \"../components/messages/createMessage\";\nvar query = {\n  allConversations: \"query($user: UserWhereInput) {\\n        allConversations(where: { members_some: $user }) {\\n            id\\n        }\\n    }\",\n  allMessages: \"query($conversation: ConversationWhereInput) {\\n        allMessages(orderBy: \\\"time_ASC\\\", where: { conversation: $conversation }) {\\n                seller {\\n                isCustomer\\n                isSupporter\\n                isAdmin\\n                email\\n                id\\n            }\\n            id\\n            text\\n            time\\n        }\\n    }\"\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    text: {\n      padding: theme.spacing(2, 2, 0)\n    },\n    paper: {\n      paddingBottom: 50\n    },\n    list: {\n      marginBottom: theme.spacing(2)\n    },\n    subheader: {\n      backgroundColor: theme.palette.background.paper\n    },\n    appBar: {\n      top: \"auto\",\n      bottom: 0,\n      backgroundColor: \"white\",\n      boxShadow: \"none\"\n    },\n    toolbar: {\n      padding: 13,\n      boder: \"none\"\n    },\n    grow: {\n      flexGrow: 1\n    },\n    fabButton: {\n      position: \"absolute\",\n      zIndex: 1,\n      top: -30,\n      left: 0,\n      right: 0,\n      margin: \"0 auto\"\n    }\n  };\n});\n\nvar supporterChat = function supporterChat(_ref) {\n  var allConversations = _ref.allConversations,\n      allMessages = _ref.allMessages;\n  var classes = useStyles();\n  return __jsx(Layout, null, __jsx(Fragment, null, __jsx(CssBaseline, null), __jsx(AllMessages, {\n    allMessages: allMessages,\n    conversation: allConversations[0]\n  }), __jsx(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar\n  }, __jsx(Toolbar, {\n    className: classes.toolbar\n  }, __jsx(CreateMessage, {\n    conversation: allConversations[0]\n  })))));\n};\n\nsupporterChat.getInitialProps = function _callee(_ref2) {\n  var res, client, id, conversationsQueryResult, allConversations, allMessages, messageQueryResult;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          res = _ref2.res, client = _ref2.client, id = _ref2.id;\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(client.request(query.allConversations, {\n            user: {\n              id: id\n            }\n          }));\n\n        case 4:\n          conversationsQueryResult = _context.sent;\n          console.log(\"conversationsQueryResult\", conversationsQueryResult);\n          allConversations = conversationsQueryResult.allConversations;\n          allMessages = [];\n\n          if (!allConversations.length) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(client.request(query.allMessages, {\n            conversation: {\n              id: allConversations[0].id\n            }\n          }));\n\n        case 11:\n          messageQueryResult = _context.sent;\n          allMessages = messageQueryResult.allMessages;\n\n        case 13:\n          return _context.abrupt(\"return\", {\n            allConversations: allConversations,\n            allMessages: allMessages\n          });\n\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](1);\n          console.error(_context.t0);\n          cookie.remove(\"token\");\n          client.request(\"mutation {\\n            unauthenticateUser {\\n                success\\n            }\\n        }\"); // if (res) {\n          //     res.writeHead(302, { Location: \"/login\" });\n          //     res.end();\n          // }\n\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 16]]);\n};\n\nexport default withAuthSync(supporterChat);","map":null,"metadata":{},"sourceType":"module"}