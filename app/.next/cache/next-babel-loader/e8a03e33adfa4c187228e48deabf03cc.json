{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState, useRef } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Pager from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport request from \"../config/request\";\nimport Card from \"@material-ui/core/Card\";\nconst query = {\n  allMessages: `query($conversation: ConversationWhereInput) {\n    allMessages(\n      orderBy: \"time_ASC\", \n      where: { conversation: $conversation },\n      first: 100) {\n      seller {\n        isCustomer\n        isSupporter\n        isAdmin\n        email\n        id\n      }\n      id\n      text\n      time\n    }\n  }`\n};\nexport default function allMessages({\n  conversation,\n  role\n}) {\n  let {\n    0: messages,\n    1: setMessage\n  } = useState([]);\n  const divRef = useRef(null);\n  let counter;\n  useEffect(() => {\n    counter = setInterval(async () => {\n      if (conversation) {\n        let {\n          data: {\n            allMessages\n          }\n        } = await request({\n          body: {\n            query: query.allMessages,\n            variables: {\n              conversation\n            }\n          }\n        }); // divRef.current.scrollIntoView({ behavior: \"smooth\" });\n\n        setMessage(allMessages);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(counter);\n    };\n  });\n\n  if (messages.length) {\n    return __jsx(Box, {\n      style: {\n        overflowY: \"scroll\",\n        padding: 8,\n        maxHeight: \"85vh\"\n      }\n    }, messages.map(message => {\n      return __jsx(Grid, {\n        key: message.id,\n        container: true,\n        spacing: 1,\n        justify: message.seller[role] ? \"flex-end\" : \"flex-start\"\n      }, __jsx(Grid, {\n        item: true\n      }, __jsx(Pager, {\n        style: {\n          padding: 5,\n          borderRadius: 8\n        }\n      }, __jsx(Typography, null, message.text))));\n    }), __jsx(\"div\", {\n      ref: divRef\n    }));\n  } else return __jsx(\"div\", {\n    ref: divRef\n  }, \"\\u0110ang t\\u1EA3i...\");\n}","map":null,"metadata":{},"sourceType":"module"}