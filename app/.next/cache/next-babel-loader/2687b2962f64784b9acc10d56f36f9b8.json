{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/truongduchuy910/apps/tuvi/app/components/ketQuas/createKetQua.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AllCungs from \"../cungs/allCungs\";\nimport AllCungVis from \"../cungVis/allCungVis\";\nimport AllTinhs from \"../tinhs/allTinhs\";\nimport AllPhuTinhs from \"../phuTinhs/allPhuTinhs\";\nimport { useState } from \"react\";\nimport request from \"../config/request\";\nimport cookie from \"js-cookie\";\nexport default function createKetQua(_ref) {\n  var _ref$allCungs = _ref.allCungs,\n      allCungs = _ref$allCungs === void 0 ? [] : _ref$allCungs,\n      _ref$allCungVis = _ref.allCungVis,\n      allCungVis = _ref$allCungVis === void 0 ? [] : _ref$allCungVis,\n      _ref$allTinhs = _ref.allTinhs,\n      allTinhs = _ref$allTinhs === void 0 ? [] : _ref$allTinhs,\n      _ref$allPhuTinhs = _ref.allPhuTinhs,\n      allPhuTinhs = _ref$allPhuTinhs === void 0 ? [] : _ref$allPhuTinhs,\n      onCreate = _ref.onCreate;\n\n  function idOnly() {\n    var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var temp = [];\n    values.forEach(function (tinhs) {\n      if (tinhs) tinhs.forEach(function (tinh) {\n        temp.push({\n          id: tinh.id\n        });\n      });\n    });\n    return temp;\n  }\n\n  var _useState = useState(\"Xem Kết Quả\"),\n      createButtonStatus = _useState[0],\n      setCreateButtonStatus = _useState[1];\n\n  var _useState2 = useState(),\n      selectedCung = _useState2[0],\n      setSelectedCung = _useState2[1];\n\n  var _useState3 = useState(),\n      selectedCungVi = _useState3[0],\n      setSelectedCungVi = _useState3[1];\n\n  var _useState4 = useState([]),\n      selectedTinhs = _useState4[0],\n      setSelectedTinhs = _useState4[1];\n\n  var _useState5 = useState([]),\n      selectedPhuTinhs = _useState5[0],\n      setSelectedPhuTinhs = _useState5[1];\n\n  var _useState6 = useState([]),\n      selectedPhuTinhs1 = _useState6[0],\n      setSelectedPhuTinhs1 = _useState6[1];\n\n  var _useState7 = useState([]),\n      selectedPhuTinhs2 = _useState7[0],\n      setSelectedPhuTinhs2 = _useState7[1];\n\n  var _useState8 = useState([]),\n      selectedPhuTinhs3 = _useState8[0],\n      setSelectedPhuTinhs3 = _useState8[1];\n\n  var _useState9 = useState([]),\n      selectedPhuTinhs4 = _useState9[0],\n      setSelectedPhuTinhs4 = _useState9[1];\n\n  var _useState10 = useState([]),\n      selectedPhuTinhs5 = _useState10[0],\n      setSelectedPhuTinhs5 = _useState10[1];\n\n  var _useState11 = useState(false),\n      label1 = _useState11[0],\n      setLabel1 = _useState11[1];\n\n  var _useState12 = useState(false),\n      label2 = _useState12[0],\n      setLabel2 = _useState12[1];\n\n  var _useState13 = useState(false),\n      label3 = _useState13[0],\n      setLabel3 = _useState13[1];\n\n  var _useState14 = useState(false),\n      label4 = _useState14[0],\n      setLabel4 = _useState14[1];\n\n  var _useState15 = useState(false),\n      label5 = _useState15[0],\n      setLabel5 = _useState15[1];\n\n  var variables = {\n    selectedCung: selectedCung,\n    selectedCungVi: selectedCungVi,\n    selectedTinhs: idOnly([selectedTinhs]),\n    selectedPhuTinhs: idOnly([selectedPhuTinhs, selectedPhuTinhs1, selectedPhuTinhs2, selectedPhuTinhs3, selectedPhuTinhs4, selectedPhuTinhs5])\n  }; // console.log(variables);\n  // functions\n\n  function createKetQua() {\n    var query, _ref2, data, errors;\n\n    return _regeneratorRuntime.async(function createKetQua$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setCreateButtonStatus(\"Vui lòng chờ...\");\n            query = \"mutation(\\n      $selectedCung: CungWhereUniqueInput\\n      $selectedCungVi: CungViWhereUniqueInput\\n      $selectedTinhs: [TinhWhereUniqueInput]\\n      $selectedPhuTinhs: [PhuTinhWhereUniqueInput]\\n  ) {\\n      createKetQua(\\n      data: {\\n          cung: { connect: $selectedCung }\\n          cungVi: { connect: $selectedCungVi}\\n          chinhTinh: { connect: $selectedTinhs, disconnectAll: true }\\n          phuTinh: { connect: $selectedPhuTinhs, disconnectAll: true }\\n      }\\n      ) {\\n        id\\n      }\\n  }\";\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(request({\n              body: {\n                query: query,\n                variables: variables\n              }\n            }));\n\n          case 4:\n            _ref2 = _context.sent;\n            data = _ref2.data;\n            errors = _ref2.errors;\n            console.log(data);\n            setCreateButtonStatus(\"Xem kết Quả\");\n            if (onCreate) onCreate({\n              data: data,\n              errors: errors\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  return __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(AllCungs, {\n    allCungs: allCungs,\n    onChange: function onChange(value) {\n      if (value) {\n        setLabel1(value.tieuDe1);\n        setLabel2(value.tieuDe2);\n        setLabel3(value.tieuDe3);\n        setLabel4(value.tieuDe4);\n        setLabel5(value.tieuDe5);\n        setSelectedCung({\n          id: value.id\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(AllCungVis, {\n    allCungVis: allCungVis,\n    onSelect: function onSelect(value) {\n      if (value) setSelectedCungVi({\n        id: value.id\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(AllTinhs, {\n    allTinhs: allTinhs,\n    onSelect: function onSelect(values) {\n      return setSelectedTinhs(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(AllPhuTinhs, {\n    allPhuTinhs: allPhuTinhs,\n    onSelect: function onSelect(values) {\n      return setSelectedPhuTinhs(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(AllPhuTinhs, {\n    label: label1,\n    allPhuTinhs: allPhuTinhs,\n    onSelect: function onSelect(values) {\n      return setSelectedPhuTinhs1(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, __jsx(AllPhuTinhs, {\n    label: label2,\n    allPhuTinhs: allPhuTinhs,\n    onSelect: function onSelect(values) {\n      return setSelectedPhuTinhs2(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(AllPhuTinhs, {\n    label: label3,\n    allPhuTinhs: allPhuTinhs,\n    onSelect: function onSelect(values) {\n      return setSelectedPhuTinhs3(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(AllPhuTinhs, {\n    label: label4,\n    allPhuTinhs: allPhuTinhs,\n    onSelect: function onSelect(values) {\n      return setSelectedPhuTinhs4(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(AllPhuTinhs, {\n    label: label5,\n    allPhuTinhs: allPhuTinhs,\n    onSelect: function onSelect(values) {\n      return setSelectedPhuTinhs5(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, __jsx(Button, {\n    style: {\n      backgroundColor: \"#76552a\",\n      color: \"#dab857\",\n      marginTop: 21,\n      marginBottom: 21\n    },\n    fullWidth: true,\n    onClick: function onClick() {\n      return createKetQua();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, createButtonStatus)));\n}","map":{"version":3,"sources":["/home/truongduchuy910/apps/tuvi/app/components/ketQuas/createKetQua.js"],"names":["Grid","Button","AllCungs","AllCungVis","AllTinhs","AllPhuTinhs","useState","request","cookie","createKetQua","allCungs","allCungVis","allTinhs","allPhuTinhs","onCreate","idOnly","values","temp","forEach","tinhs","tinh","push","id","createButtonStatus","setCreateButtonStatus","selectedCung","setSelectedCung","selectedCungVi","setSelectedCungVi","selectedTinhs","setSelectedTinhs","selectedPhuTinhs","setSelectedPhuTinhs","selectedPhuTinhs1","setSelectedPhuTinhs1","selectedPhuTinhs2","setSelectedPhuTinhs2","selectedPhuTinhs3","setSelectedPhuTinhs3","selectedPhuTinhs4","setSelectedPhuTinhs4","selectedPhuTinhs5","setSelectedPhuTinhs5","label1","setLabel1","label2","setLabel2","label3","setLabel3","label4","setLabel4","label5","setLabel5","variables","query","body","data","errors","console","log","value","tieuDe1","tieuDe2","tieuDe3","tieuDe4","tieuDe5","backgroundColor","color","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AllCungs from \"../cungs/allCungs\";\nimport AllCungVis from \"../cungVis/allCungVis\";\nimport AllTinhs from \"../tinhs/allTinhs\";\nimport AllPhuTinhs from \"../phuTinhs/allPhuTinhs\";\nimport { useState } from \"react\";\nimport request from \"../config/request\";\nimport cookie from \"js-cookie\";\n\nexport default function createKetQua({\n  allCungs = [],\n  allCungVis = [],\n  allTinhs = [],\n  allPhuTinhs = [],\n  onCreate,\n}) {\n  function idOnly(values = []) {\n    let temp = [];\n\n    values.forEach((tinhs) => {\n      if (tinhs)\n        tinhs.forEach((tinh) => {\n          temp.push({ id: tinh.id });\n        });\n    });\n    return temp;\n  }\n  let [createButtonStatus, setCreateButtonStatus] = useState(\"Xem Kết Quả\");\n  let [selectedCung, setSelectedCung] = useState();\n  let [selectedCungVi, setSelectedCungVi] = useState();\n  let [selectedTinhs, setSelectedTinhs] = useState([]);\n  let [selectedPhuTinhs, setSelectedPhuTinhs] = useState([]);\n  let [selectedPhuTinhs1, setSelectedPhuTinhs1] = useState([]);\n  let [selectedPhuTinhs2, setSelectedPhuTinhs2] = useState([]);\n  let [selectedPhuTinhs3, setSelectedPhuTinhs3] = useState([]);\n  let [selectedPhuTinhs4, setSelectedPhuTinhs4] = useState([]);\n  let [selectedPhuTinhs5, setSelectedPhuTinhs5] = useState([]);\n  let [label1, setLabel1] = useState(false);\n  let [label2, setLabel2] = useState(false);\n  let [label3, setLabel3] = useState(false);\n  let [label4, setLabel4] = useState(false);\n  let [label5, setLabel5] = useState(false);\n  let variables = {\n    selectedCung,\n    selectedCungVi,\n    selectedTinhs: idOnly([selectedTinhs]),\n    selectedPhuTinhs: idOnly([\n      selectedPhuTinhs,\n      selectedPhuTinhs1,\n      selectedPhuTinhs2,\n      selectedPhuTinhs3,\n      selectedPhuTinhs4,\n      selectedPhuTinhs5,\n    ]),\n  };\n  // console.log(variables);\n  // functions\n  async function createKetQua() {\n    setCreateButtonStatus(\"Vui lòng chờ...\");\n    const query = `mutation(\n      $selectedCung: CungWhereUniqueInput\n      $selectedCungVi: CungViWhereUniqueInput\n      $selectedTinhs: [TinhWhereUniqueInput]\n      $selectedPhuTinhs: [PhuTinhWhereUniqueInput]\n  ) {\n      createKetQua(\n      data: {\n          cung: { connect: $selectedCung }\n          cungVi: { connect: $selectedCungVi}\n          chinhTinh: { connect: $selectedTinhs, disconnectAll: true }\n          phuTinh: { connect: $selectedPhuTinhs, disconnectAll: true }\n      }\n      ) {\n        id\n      }\n  }`;\n\n    const { data, errors } = await request({ body: { query, variables } });\n    console.log(data);\n    setCreateButtonStatus(\"Xem kết Quả\");\n    if (onCreate) onCreate({ data, errors });\n  }\n  return (\n    <Grid container spacing={1} justify=\"center\">\n      <Grid item xs={12} md={4}>\n        <AllCungs\n          allCungs={allCungs}\n          onChange={(value) => {\n            if (value) {\n              setLabel1(value.tieuDe1);\n              setLabel2(value.tieuDe2);\n              setLabel3(value.tieuDe3);\n              setLabel4(value.tieuDe4);\n              setLabel5(value.tieuDe5);\n              setSelectedCung({ id: value.id });\n            }\n          }}\n        />\n      </Grid>\n\n      <Grid item xs={12} md={4}>\n        <AllCungVis\n          allCungVis={allCungVis}\n          onSelect={(value) => {\n            if (value) setSelectedCungVi({ id: value.id });\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <AllTinhs\n          allTinhs={allTinhs}\n          onSelect={(values) => setSelectedTinhs(values)}\n        />\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <AllPhuTinhs\n          allPhuTinhs={allPhuTinhs}\n          onSelect={(values) => setSelectedPhuTinhs(values)}\n        />\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <AllPhuTinhs\n          label={label1}\n          allPhuTinhs={allPhuTinhs}\n          onSelect={(values) => setSelectedPhuTinhs1(values)}\n        />\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <AllPhuTinhs\n          label={label2}\n          allPhuTinhs={allPhuTinhs}\n          onSelect={(values) => setSelectedPhuTinhs2(values)}\n        />\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <AllPhuTinhs\n          label={label3}\n          allPhuTinhs={allPhuTinhs}\n          onSelect={(values) => setSelectedPhuTinhs3(values)}\n        />\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <AllPhuTinhs\n          label={label4}\n          allPhuTinhs={allPhuTinhs}\n          onSelect={(values) => setSelectedPhuTinhs4(values)}\n        />\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <AllPhuTinhs\n          label={label5}\n          allPhuTinhs={allPhuTinhs}\n          onSelect={(values) => setSelectedPhuTinhs5(values)}\n        />\n      </Grid>\n      <Grid item xs={12} md={6} lg={4}>\n        <Button\n          style={{\n            backgroundColor: \"#76552a\",\n            color: \"#dab857\",\n            marginTop: 21,\n            marginBottom: 21,\n          }}\n          fullWidth\n          onClick={() => createKetQua()}\n        >\n          {createButtonStatus}\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}