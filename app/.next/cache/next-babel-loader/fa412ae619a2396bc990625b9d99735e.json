{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport DirectionsIcon from \"@material-ui/icons/Directions\";\nimport { useState } from \"react\";\nimport request from \"../config/request\";\nvar query = {\n  createMessage: \"mutation($text: String, $conversation: ConversationWhereUniqueInput) {\\n    createMessage(\\n      data: { text: $text, conversation: { connect: $conversation } }\\n    ) {\\n      id\\n    }\\n  }\"\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      padding: \"1px 2px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      width: \"100%\",\n      borderRadius: 8\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1\n    },\n    iconButton: {\n      padding: 8\n    },\n    divider: {\n      height: 21,\n      margin: 3\n    }\n  };\n});\nexport default function createMessage(_ref) {\n  var conversation = _ref.conversation;\n  var classes = useStyles();\n\n  var _useState = useState(),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useState2 = useState(),\n      defaultValue = _useState2[0],\n      setDefaultValue = _useState2[1];\n\n  function createMessageClick() {\n    var _ref2, data;\n\n    return _regeneratorRuntime.async(function createMessageClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!text) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(request({\n              body: {\n                query: query.createMessage,\n                variables: {\n                  text: text,\n                  conversation: conversation\n                }\n              }\n            }));\n\n          case 3:\n            _ref2 = _context.sent;\n            data = _ref2.data;\n            console.log(data);\n            setText(\"\");\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  return __jsx(Paper, {\n    className: classes.root,\n    onKeyPress: function _callee(event) {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(event.key == \"Enter\")) {\n                _context2.next = 3;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(createMessageClick());\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    }\n  }, __jsx(InputBase, {\n    className: classes.input,\n    placeholder: \"Nh\\u1EADp tin nh\\u1EAFn\",\n    onChange: function onChange(e) {\n      return setText(e.target.value);\n    },\n    inputProps: {\n      \"aria-label\": \"Nhập tin nhắn\"\n    },\n    value: text ? text : \"\"\n  }), __jsx(Divider, {\n    className: classes.divider,\n    orientation: \"vertical\"\n  }), __jsx(IconButton, {\n    onClick: function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(createMessageClick());\n\n            case 2:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    },\n    color: \"primary\",\n    className: classes.iconButton\n  }, __jsx(SendIcon, null)));\n}","map":null,"metadata":{},"sourceType":"module"}