{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport Pager from \"@material-ui/core/Paper\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport request from \"../config/request\";\nconst query = {\n  allConversations: `query($user: UserWhereInput) {\n        allConversations(where: { members_some: $user }) {\n          id\n          members (where: { isSupporter: null, AND: { isAdmin: null } }) {\n              id\n              email\n          }\n        }\n      }`\n};\nexport default function allConversations({\n  user,\n  onClick\n}) {\n  let {\n    0: conversations,\n    1: setConversations\n  } = useState([]);\n  let counter;\n  useEffect(() => {\n    counter = setInterval(async () => {\n      let {\n        data: {\n          allConversations\n        }\n      } = await request({\n        body: {\n          query: query.allConversations,\n          variables: {\n            user\n          }\n        }\n      });\n      setConversations(allConversations);\n    }, 2020);\n    return () => {\n      clearInterval(counter);\n    };\n  });\n\n  if (conversations.length) {\n    return __jsx(List, null, conversations.map(conversation => {\n      return __jsx(ListItem, {\n        button: true,\n        key: conversation.id,\n        onClick: () => onClick({\n          id: conversation.id\n        })\n      }, __jsx(ListItemText, {\n        primary: conversation.members.map(conversation => conversation.email).toString()\n      }));\n    }));\n  } else return __jsx(\"div\", null, \"...\");\n}","map":null,"metadata":{},"sourceType":"module"}