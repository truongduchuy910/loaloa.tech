{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withAuthSync } from \"../utils/auth\";\nimport cookie from \"js-cookie\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AllMessages from \"../components/messages/allMessages\";\nimport AllConversations from \"../components/conversations/allConversations\";\nimport CreateMessage from \"../components/messages/createMessage\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Router from \"next/router\";\nimport Link from \"../src/Link\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    box: {\n      border: 1,\n      background: \"rgba(225, 225, 225, 0.3)\",\n      borderRadius: 8,\n      padding: 21,\n      height: \"100%\"\n    },\n    paper: {\n      paddingBottom: 50\n    },\n    list: {\n      marginBottom: theme.spacing(2)\n    },\n    subheader: {\n      backgroundColor: theme.palette.background.paper\n    },\n    appBar: {\n      top: \"auto\",\n      bottom: 0,\n      backgroundColor: \"white\",\n      boxShadow: \"none\"\n    },\n    toolbar: {\n      padding: 13,\n      boder: \"none\"\n    },\n    grow: {\n      flexGrow: 1\n    },\n    fabButton: {\n      position: \"absolute\",\n      zIndex: 1,\n      top: -30,\n      left: 0,\n      right: 0,\n      margin: \"0 auto\"\n    }\n  };\n});\nvar query = {\n  allAdmins: \"query {\\n    allAdmins: allUsers(where: { isAdmin: true }) {\\n      id\\n    }\\n  }\",\n  allConversations: \"query($user: UserWhereInput) {\\n    allConversations(where: { members_some: $user }) {\\n      id\\n    }\\n  }\",\n  allMessages: \"query($conversation: ConversationWhereInput) {\\n    allMessages(orderBy: \\\"time_ASC\\\", where: { conversation: $conversation }) {\\n      seller {\\n        isCustomer\\n        isSupporter\\n        isAdmin\\n        email\\n        id\\n      }\\n      id\\n      text\\n      time\\n    }\\n  }\",\n  createConversation: \"mutation($members: [UserWhereUniqueInput]) {\\n    createConversation(data: { members: { connect: $members } }) {\\n      id\\n    }\\n  }\"\n};\n\nfunction customerChat(_ref) {\n  var allConversations = _ref.allConversations,\n      allMessages = _ref.allMessages,\n      user = _ref.user;\n  var classes = useStyles();\n\n  var _useState = useState(),\n      conversation = _useState[0],\n      setConversation = _useState[1];\n\n  return __jsx(CardMedia, {\n    image: \"/img/tuvilogic_bg.jpg\"\n  }, __jsx(Container, {\n    maxWidth: \"lg\",\n    style: {\n      padding: 13,\n      minHeight: \"100vh\"\n    }\n  }, __jsx(Link, {\n    href: \"/\"\n  }, \"Quay l\\u1EA1i\"), __jsx(Grid, {\n    container: true,\n    spacing: 1\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    xl: 12,\n    sm: 12,\n    md: 4,\n    lg: 6\n  }, __jsx(Paper, {\n    className: classes.box\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.scroll\n  }, __jsx(AllMessages, {\n    conversation: conversation,\n    role: \"isAdmin\"\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(CreateMessage, {\n    conversation: conversation\n  }))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    xl: 6,\n    sm: 6,\n    md: 4,\n    lg: 3\n  }, __jsx(Paper, {\n    className: classes.box\n  }, __jsx(AllConversations, {\n    user: user,\n    onClick: function onClick(conversation) {\n      setConversation(conversation);\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    xl: 6,\n    sm: 6,\n    md: 4,\n    lg: 3\n  }, __jsx(Paper, {\n    className: classes.box\n  }, __jsx(AllConversations, {\n    user: user\n  }))))));\n}\n\ncustomerChat.getInitialProps = function _callee(_ref2) {\n  var res, client, id, email, isAdmin, isSupporter, isCustomer, data, allConversations, _ref3, allMessages, _ref4, members, _ref5, createConversation;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          res = _ref2.res, client = _ref2.client, id = _ref2.id, email = _ref2.email, isAdmin = _ref2.isAdmin, isSupporter = _ref2.isSupporter, isCustomer = _ref2.isCustomer;\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(client.request(query.allConversations, {\n            user: {\n              id: id\n            }\n          }));\n\n        case 4:\n          data = _context.sent;\n          allConversations = data.allConversations;\n\n          if (!allConversations.length) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(client.request(query.allMessages, {\n            conversation: {\n              id: allConversations[0].id\n            }\n          }));\n\n        case 9:\n          _ref3 = _context.sent;\n          allMessages = _ref3.allMessages;\n          _context.next = 23;\n          break;\n\n        case 13:\n          _context.next = 15;\n          return _regeneratorRuntime.awrap(client.request(query.allAdmins));\n\n        case 15:\n          _ref4 = _context.sent;\n          members = _ref4.allAdmins;\n          members.push({\n            id: id\n          });\n          _context.next = 20;\n          return _regeneratorRuntime.awrap(client.request(query.createConversation, {\n            members: members\n          }));\n\n        case 20:\n          _ref5 = _context.sent;\n          createConversation = _ref5.createConversation;\n          allConversations.push(createConversation);\n\n        case 23:\n          return _context.abrupt(\"return\", {\n            allConversations: allConversations,\n            allMessages: allMessages,\n            user: {\n              id: id\n            }\n          });\n\n        case 26:\n          _context.prev = 26;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n          cookie.remove(\"token\");\n          client.request(\"mutation {\\n      unauthenticateUser {\\n        success\\n      }\\n    }\");\n\n          if (res) {\n            res.writeHead(302, {\n              Location: \"/login\"\n            });\n            res.end();\n          }\n\n        case 32:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 26]]);\n};\n\nexport default withAuthSync(customerChat);","map":null,"metadata":{},"sourceType":"module"}