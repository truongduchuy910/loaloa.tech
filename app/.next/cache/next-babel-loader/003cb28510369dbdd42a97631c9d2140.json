{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AllCungs from \"../cungs/allCungs\";\nimport AllCungVis from \"../cungVis/allCungVis\";\nimport AllTinhs from \"../tinhs/allTinhs\";\nimport AllPhuTinhs from \"../phuTinhs/allPhuTinhs\";\nimport { useState } from \"react\";\nimport request from \"../config/request\";\nimport cookie from \"js-cookie\";\nexport default function createKetQua(_ref) {\n  var _ref$allCungs = _ref.allCungs,\n      allCungs = _ref$allCungs === void 0 ? [] : _ref$allCungs,\n      _ref$allCungVis = _ref.allCungVis,\n      allCungVis = _ref$allCungVis === void 0 ? [] : _ref$allCungVis,\n      _ref$allTinhs = _ref.allTinhs,\n      allTinhs = _ref$allTinhs === void 0 ? [] : _ref$allTinhs,\n      _ref$allPhuTinhs = _ref.allPhuTinhs,\n      allPhuTinhs = _ref$allPhuTinhs === void 0 ? [] : _ref$allPhuTinhs,\n      onCreate = _ref.onCreate;\n\n  function idOnly() {\n    var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var temp = [];\n    values.forEach(function (tinhs) {\n      if (tinhs) tinhs.forEach(function (tinh) {\n        temp.push({\n          id: tinh.id\n        });\n      });\n    });\n    return temp;\n  }\n\n  var _useState = useState(\"Xem Kết Quả\"),\n      createButtonStatus = _useState[0],\n      setCreateButtonStatus = _useState[1];\n\n  var _useState2 = useState(),\n      selectedCung = _useState2[0],\n      setSelectedCung = _useState2[1];\n\n  var _useState3 = useState(),\n      selectedCungVi = _useState3[0],\n      setSelectedCungVi = _useState3[1];\n\n  var _useState4 = useState([]),\n      selectedTinhs = _useState4[0],\n      setSelectedTinhs = _useState4[1];\n\n  var _useState5 = useState([]),\n      selectedPhuTinhs = _useState5[0],\n      setSelectedPhuTinhs = _useState5[1];\n\n  var _useState6 = useState([]),\n      selectedPhuTinhs1 = _useState6[0],\n      setSelectedPhuTinhs1 = _useState6[1];\n\n  var _useState7 = useState([]),\n      selectedPhuTinhs2 = _useState7[0],\n      setSelectedPhuTinhs2 = _useState7[1];\n\n  var _useState8 = useState([]),\n      selectedPhuTinhs3 = _useState8[0],\n      setSelectedPhuTinhs3 = _useState8[1];\n\n  var _useState9 = useState([]),\n      selectedPhuTinhs4 = _useState9[0],\n      setSelectedPhuTinhs4 = _useState9[1];\n\n  var _useState10 = useState([]),\n      selectedPhuTinhs5 = _useState10[0],\n      setSelectedPhuTinhs5 = _useState10[1];\n\n  var _useState11 = useState(false),\n      label1 = _useState11[0],\n      setLabel1 = _useState11[1];\n\n  var _useState12 = useState(false),\n      label2 = _useState12[0],\n      setLabel2 = _useState12[1];\n\n  var _useState13 = useState(false),\n      label3 = _useState13[0],\n      setLabel3 = _useState13[1];\n\n  var _useState14 = useState(false),\n      label4 = _useState14[0],\n      setLabel4 = _useState14[1];\n\n  var _useState15 = useState(false),\n      label5 = _useState15[0],\n      setLabel5 = _useState15[1];\n\n  var variables = {\n    selectedCung: selectedCung,\n    selectedCungVi: selectedCungVi,\n    selectedTinhs: idOnly([selectedTinhs]),\n    selectedPhuTinhs: idOnly([selectedPhuTinhs, selectedPhuTinhs1, selectedPhuTinhs2, selectedPhuTinhs3, selectedPhuTinhs4, selectedPhuTinhs5])\n  }; // console.log(variables);\n  // functions\n\n  function createKetQua() {\n    var query, _ref2, data, errors;\n\n    return _regeneratorRuntime.async(function createKetQua$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setCreateButtonStatus(\"Vui lòng chờ...\");\n            query = \"mutation(\\n      $selectedCung: CungWhereUniqueInput\\n      $selectedCungVi: CungViWhereUniqueInput\\n      $selectedTinhs: [TinhWhereUniqueInput]\\n      $selectedPhuTinhs: [PhuTinhWhereUniqueInput]\\n  ) {\\n      createKetQua(\\n      data: {\\n          cung: { connect: $selectedCung }\\n          cungVi: { connect: $selectedCungVi}\\n          chinhTinh: { connect: $selectedTinhs, disconnectAll: true }\\n          phuTinh: { connect: $selectedPhuTinhs, disconnectAll: true }\\n      }\\n      ) {\\n        id\\n      }\\n  }\";\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(request({\n              body: {\n                query: query,\n                variables: variables\n              }\n            }));\n\n          case 4:\n            _ref2 = _context.sent;\n            data = _ref2.data;\n            errors = _ref2.errors;\n            if (!data.createKetQua) setCreateButtonStatus(\"Bạn bị giới hạn, vui lòng liên hệ qua livechat\");else setCreateButtonStatus(\"Xem kết Quả\");\n            if (onCreate) onCreate({\n              data: data,\n              errors: errors\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  return __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    justify: \"center\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(AllCungs, {\n    allCungs: allCungs,\n    onChange: function onChange(value) {\n      if (value) {\n        setLabel1(value.tieuDe1);\n        setLabel2(value.tieuDe2);\n        setLabel3(value.tieuDe3);\n        setLabel4(value.tieuDe4);\n        setLabel5(value.tieuDe5);\n        setSelectedCung({\n          id: value.id\n        });\n      }\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(AllCungVis, {\n    allCungVis: allCungVis,\n    onSelect: function onSelect(value) {\n      if (value) setSelectedCungVi({\n        id: value.id\n      });\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(AllTinhs, {\n    allTinhs: allTinhs,\n    onSelect: function onSelect(values) {\n      return setSelectedTinhs(values);\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(AllPhuTinhs, {\n    allPhuTinhs: allPhuTinhs,\n    onSelect: function onSelect(values) {\n      return setSelectedPhuTinhs(values);\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(AllPhuTinhs, {\n    label: label1,\n    allPhuTinhs: allPhuTinhs,\n    onSelect: function onSelect(values) {\n      return setSelectedPhuTinhs1(values);\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(AllPhuTinhs, {\n    label: label2,\n    allPhuTinhs: allPhuTinhs,\n    onSelect: function onSelect(values) {\n      return setSelectedPhuTinhs2(values);\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(AllPhuTinhs, {\n    label: label3,\n    allPhuTinhs: allPhuTinhs,\n    onSelect: function onSelect(values) {\n      return setSelectedPhuTinhs3(values);\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(AllPhuTinhs, {\n    label: label4,\n    allPhuTinhs: allPhuTinhs,\n    onSelect: function onSelect(values) {\n      return setSelectedPhuTinhs4(values);\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(AllPhuTinhs, {\n    label: label5,\n    allPhuTinhs: allPhuTinhs,\n    onSelect: function onSelect(values) {\n      return setSelectedPhuTinhs5(values);\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4\n  }, __jsx(Button, {\n    style: {\n      backgroundColor: \"#76552a\",\n      color: \"#dab857\",\n      marginTop: 21,\n      marginBottom: 21\n    },\n    fullWidth: true,\n    onClick: function onClick() {\n      return createKetQua();\n    }\n  }, createButtonStatus)));\n}","map":null,"metadata":{},"sourceType":"module"}