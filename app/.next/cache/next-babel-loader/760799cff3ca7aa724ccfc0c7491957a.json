{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/truongduchuy910/apps/tuvi/app/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withAuthSync } from \"../utils/auth\";\nimport cookie from \"js-cookie\";\nimport { useState } from \"react\";\nimport Layout from \"../src/Layout\";\nimport AllKetQuas from \"../components/ketQuas/allKetQuas\";\nimport CreateKetQua from \"../components/ketQuas/createKetQua\";\nimport request from \"../components/config/request\";\nimport Logo from \"../src/logo\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography } from \"@material-ui/core\";\nimport LightBoard from \"../src/LightBoard\";\nimport ReactMarkdown from \"react-markdown\";\nimport Logout from \"../components/user/logout\";\n\nvar Index = function Index(props) {\n  // variables\n  function getAllCungs() {\n    var _ref, allKetQuas;\n\n    return _regeneratorRuntime.async(function getAllCungs$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(request({\n              body: {\n                query: \"query {\\n          allKetQuas(orderBy: \\\"time_DESC\\\") {\\n            id\\n            cung {\\n              name\\n            }\\n            ketQua {\\n              id\\n              cung {\\n                name\\n              }\\n              chinhTinh {\\n                id\\n                name\\n              }\\n              phuTinh {\\n                id\\n                name\\n              }\\n              giai\\n            }\\n          }\\n        }\\n        \"\n              }\n            }));\n\n          case 2:\n            _ref = _context.sent;\n            allKetQuas = _ref.data.allKetQuas;\n            return _context.abrupt(\"return\", allKetQuas);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  var _useState = useState(props.allKetQuas),\n      allKetQuas = _useState[0],\n      setAllKetQuas = _useState[1];\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(LightBoard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(LightBoard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(ReactMarkdown, {\n    source: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(LightBoard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(CreateKetQua, {\n    token: props.token,\n    allCungs: props.allCungs,\n    allCungVis: props.allCungVis,\n    allTinhs: props.allTinhs,\n    allPhuTinhs: props.allPhuTinhs,\n    onCreate: function _callee(_ref2) {\n      var data, errors, response;\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              data = _ref2.data, errors = _ref2.errors;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(getAllCungs());\n\n            case 3:\n              response = _context2.sent;\n              setAllKetQuas(response);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(LightBoard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, props.email), __jsx(Logout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), __jsx(AllKetQuas, {\n    allKetQuas: allKetQuas,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })))));\n};\n\nIndex.getInitialProps = function _callee2(_ref3) {\n  var res, client, query, data;\n  return _regeneratorRuntime.async(function _callee2$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          res = _ref3.res, client = _ref3.client;\n          //get variables from server\n          query = \"query {\\n    allCungs {\\n      id\\n      name\\n      tieuDe1\\n      tieuDe2\\n      tieuDe3\\n      tieuDe4\\n      tieuDe5\\n    }\\n    allCungVis {\\n      id\\n      name\\n    }\\n    allTinhs {\\n      id\\n      name\\n    }\\n    allPhuTinhs {\\n      id\\n      name\\n    }\\n    allKetQuas (orderBy: \\\"time_DESC\\\") {\\n      id\\n      cung {\\n        name\\n      }\\n      ketQua {\\n        id\\n        cung {\\n          name\\n        }\\n        chinhTinh {\\n          id\\n          name\\n        }\\n        phuTinh {\\n          id\\n          name\\n        }\\n        giai\\n      }\\n    }\\n  }\";\n          _context3.prev = 2;\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(client.request(query));\n\n        case 5:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", data);\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](2);\n          cookie.remove(\"token\");\n\n          if (res) {\n            res.writeHead(302, {\n              Location: \"/login\"\n            });\n            res.end();\n          }\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[2, 9]]);\n};\n\nexport default withAuthSync(Index);","map":{"version":3,"sources":["/home/truongduchuy910/apps/tuvi/app/pages/index.js"],"names":["withAuthSync","cookie","useState","Layout","AllKetQuas","CreateKetQua","request","Logo","Grid","Typography","LightBoard","ReactMarkdown","Logout","Index","props","getAllCungs","body","query","allKetQuas","data","setAllKetQuas","token","allCungs","allCungVis","allTinhs","allPhuTinhs","errors","response","email","getInitialProps","res","client","remove","writeHead","Location","end"],"mappings":"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","sourcesContent":["import { withAuthSync } from \"../utils/auth\";\nimport cookie from \"js-cookie\";\nimport { useState } from \"react\";\nimport Layout from \"../src/Layout\";\nimport AllKetQuas from \"../components/ketQuas/allKetQuas\";\nimport CreateKetQua from \"../components/ketQuas/createKetQua\";\nimport request from \"../components/config/request\";\nimport Logo from \"../src/logo\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography } from \"@material-ui/core\";\nimport LightBoard from \"../src/LightBoard\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport Logout from \"../components/user/logout\";\nlet Index = props => {\n  // variables\n  async function getAllCungs() {\n    let {\n      data: { allKetQuas }\n    } = await request({\n      body: {\n        query: `query {\n          allKetQuas(orderBy: \"time_DESC\") {\n            id\n            cung {\n              name\n            }\n            ketQua {\n              id\n              cung {\n                name\n              }\n              chinhTinh {\n                id\n                name\n              }\n              phuTinh {\n                id\n                name\n              }\n              giai\n            }\n          }\n        }\n        `\n      }\n    });\n    return allKetQuas;\n  }\n  let [allKetQuas, setAllKetQuas] = useState(props.allKetQuas);\n  return (\n    <Layout>\n      <Grid container spacing={1}>\n        <Grid item xs={12} md={5}>\n          <Logo />\n        </Grid>\n        <Grid item xs={7}>\n          <LightBoard></LightBoard>\n        </Grid>\n        <Grid item xs={12}>\n          <LightBoard>\n            <ReactMarkdown source={``} />\n          </LightBoard>\n        </Grid>\n        <Grid item xs={12}>\n          <LightBoard>\n            <CreateKetQua\n              token={props.token}\n              allCungs={props.allCungs}\n              allCungVis={props.allCungVis}\n              allTinhs={props.allTinhs}\n              allPhuTinhs={props.allPhuTinhs}\n              onCreate={async ({ data, errors }) => {\n                let response = await getAllCungs();\n                setAllKetQuas(response);\n              }}\n            />\n          </LightBoard>\n        </Grid>\n\n        <Grid item xs={12}>\n          <LightBoard>\n            <Typography>{props.email}</Typography>\n            <Logout />\n            <AllKetQuas allKetQuas={allKetQuas} />\n          </LightBoard>\n        </Grid>\n      </Grid>\n    </Layout>\n  );\n};\n\nIndex.getInitialProps = async ({ res, client }) => {\n  //get variables from server\n  const query = `query {\n    allCungs {\n      id\n      name\n      tieuDe1\n      tieuDe2\n      tieuDe3\n      tieuDe4\n      tieuDe5\n    }\n    allCungVis {\n      id\n      name\n    }\n    allTinhs {\n      id\n      name\n    }\n    allPhuTinhs {\n      id\n      name\n    }\n    allKetQuas (orderBy: \"time_DESC\") {\n      id\n      cung {\n        name\n      }\n      ketQua {\n        id\n        cung {\n          name\n        }\n        chinhTinh {\n          id\n          name\n        }\n        phuTinh {\n          id\n          name\n        }\n        giai\n      }\n    }\n  }`;\n  try {\n    const data = await client.request(query);\n    return data;\n  } catch (error) {\n    cookie.remove(\"token\");\n    if (res) {\n      res.writeHead(302, { Location: \"/login\" });\n      res.end();\n    }\n  }\n};\nexport default withAuthSync(Index);\n"]},"metadata":{},"sourceType":"module"}