{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport LabelIcon from \"@material-ui/icons/Label\";\nimport NightsStayIcon from \"@material-ui/icons/NightsStay\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\n\nfunction intersect() {\n  var A = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var B = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var inter = false;\n  A.forEach(function (a) {\n    B.forEach(function (b) {\n      if (a.id == b.id) inter = true;\n    });\n  });\n  return inter;\n}\n\nexport default (function (_ref) {\n  var _ref$allKetQuas = _ref.allKetQuas,\n      allKetQuas = _ref$allKetQuas === void 0 ? [] : _ref$allKetQuas;\n  return __jsx(Grid, {\n    container: true,\n    spacing: 1\n  }, allKetQuas.map(function (ketQua) {\n    ketQua.ketQua.sort(function (a, b) {\n      return a.chinhTinh.length + a.phuTinh.length < b.chinhTinh.length + b.phuTinh.length ? 1 : a.chinhTinh.length + a.phuTinh.length == b.chinhTinh.length + b.phuTinh.length ? a.chinhTinh.length < b.chinhTinh.length ? 1 : -1 : -1;\n    });\n    var existChinhTinhs = [];\n    var existPhuTinhs = [];\n    return __jsx(Grid, {\n      key: ketQua.id,\n      item: true,\n      xs: 12\n    }, __jsx(Box, {\n      style: {\n        backgroundColor: \"transparent\",\n        border: 1,\n        borderColor: \"rgba(0, 0, 0, 0.3)\",\n        borderStyle: \"solid\",\n        borderRadius: 8,\n        padding: 16\n      }\n    }, __jsx(List, null, __jsx(ListItem, null, __jsx(ListItemText, null, \"tuvilogic.com\")), __jsx(ListItem, null, __jsx(ListItemIcon, null, __jsx(LabelIcon, null)), __jsx(ListItemText, {\n      primary: __jsx(Typography, {\n        style: {\n          fontWeight: \"bold\"\n        }\n      }, \"Cung \".concat(ketQua.cung.name))\n    }))), ketQua.ketQua.map(function (giai) {\n      var chinhTinhs = giai.chinhTinh.map(function (tinh) {\n        return tinh.name;\n      }).toString();\n      var phuTinhs = giai.phuTinh.map(function (tinh) {\n        return tinh.name;\n      }).toString();\n      var available = false;\n\n      if (giai.chinhTinh.length && !intersect(giai.chinhTinh, existChinhTinhs)) {\n        available = true;\n        existChinhTinhs = existChinhTinhs.concat(giai.chinhTinh);\n      }\n\n      if (giai.phuTinh.length && !intersect(giai.phuTinh, existPhuTinhs)) {\n        available = true;\n        existPhuTinhs = existPhuTinhs.concat(giai.phuTinh);\n      }\n\n      if (available) {\n        return __jsx(List, {\n          component: \"nav\",\n          key: giai.id\n        }, chinhTinhs ? __jsx(ListItem, null, __jsx(ListItemIcon, null, __jsx(StarIcon, null)), __jsx(ListItemText, {\n          primary: \"Ch\\xEDnh tinh \".concat(chinhTinhs, \". \"),\n          secondary: giai.giai\n        })) : null, phuTinhs ? __jsx(ListItem, null, __jsx(ListItemIcon, null, __jsx(StarBorderIcon, null)), __jsx(ListItemText, {\n          primary: \"Ph\\u1EE5 tinh \".concat(phuTinhs, \". \"),\n          secondary: giai.giai\n        })) : null);\n      }\n    })));\n  }));\n});","map":null,"metadata":{},"sourceType":"module"}