{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\n\n/**\n * Utils\n */\nconst removeElementByIds = ids => {\n  ids.forEach(id => {\n    const element = document.getElementById(id);\n\n    if (element && element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  });\n};\n/**\n * Messenger Chat Plugin\n */\n\n\nclass MessengerChat extends Component {\n  constructor(props) {\n    super(props);\n    this.setFbAsyncInit = this.setFbAsyncInit.bind(this);\n    this.reloadSDKAsynchronously = this.reloadSDKAsynchronously.bind(this);\n    this.loadSDKAsynchronously = this.loadSDKAsynchronously.bind(this);\n    this.createMarkup = this.createMarkup.bind(this);\n    this.controlPlugin = this.controlPlugin.bind(this);\n    this.subscribeEvents = this.subscribeEvents.bind(this);\n    this.removeFacebookSDK = this.removeFacebookSDK.bind(this);\n    this.state = {\n      fbLoaded: false,\n      shouldShowDialog: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.setFbAsyncInit();\n    this.reloadSDKAsynchronously();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.pageId !== this.props.pageId || // prevProps.appId !== this.props.appId ||\n    prevProps.shouldShowDialog !== this.props.shouldShowDialog || prevProps.htmlRef !== this.props.htmlRef || prevProps.minimized !== this.props.minimized || prevProps.themeColor !== this.props.themeColor || prevProps.loggedInGreeting !== this.props.loggedInGreeting || prevProps.loggedOutGreeting !== this.props.loggedOutGreeting || prevProps.greetingDialogDisplay !== this.props.greetingDialogDisplay || prevProps.greetingDialogDelay !== this.props.greetingDialogDelay || prevProps.autoLogAppEvents !== this.props.autoLogAppEvents || prevProps.xfbml !== this.props.xfbml || prevProps.version !== this.props.version || prevProps.language !== this.props.language) {\n      this.setFbAsyncInit();\n      this.reloadSDKAsynchronously();\n    }\n  }\n\n  setFbAsyncInit() {\n    const {\n      autoLogAppEvents,\n      xfbml,\n      version\n    } = this.props;\n\n    window.fbAsyncInit = () => {\n      window.FB.init({\n        // appId,\n        autoLogAppEvents,\n        xfbml,\n        version: `v${version}`\n      });\n      this.setState({\n        fbLoaded: true\n      });\n    };\n  }\n\n  loadSDKAsynchronously() {\n    // const { language } = this.props\n\n    /* eslint-disable */\n    (function (d, s, id) {\n      var js,\n          fjs = d.getElementsByTagName(s)[0];\n\n      if (d.getElementById(id)) {\n        return;\n      }\n\n      js = d.createElement(s);\n      js.id = id;\n      js.src = `https://connect.facebook.net/vi_VN/sdk/xfbml.customerchat.js`;\n      fjs.parentNode.insertBefore(js, fjs);\n    })(document, \"script\", \"facebook-jssdk\");\n    /* eslint-enable */\n\n  }\n\n  removeFacebookSDK() {\n    removeElementByIds([\"facebook-jssdk\", \"fb-root\"]);\n    delete window.FB;\n  }\n\n  reloadSDKAsynchronously() {\n    this.removeFacebookSDK();\n    this.loadSDKAsynchronously();\n  }\n\n  controlPlugin() {\n    const {\n      shouldShowDialog\n    } = this.props;\n\n    if (shouldShowDialog) {\n      window.FB.CustomerChat.showDialog();\n    } else {\n      window.FB.CustomerChat.hideDialog();\n    }\n  }\n\n  subscribeEvents() {\n    const {\n      onCustomerChatDialogShow,\n      onCustomerChatDialogHide\n    } = this.props;\n\n    if (onCustomerChatDialogShow) {\n      window.FB.Event.subscribe(\"customerchat.dialogShow\", onCustomerChatDialogShow);\n    }\n\n    if (onCustomerChatDialogHide) {\n      window.FB.Event.subscribe(\"customerchat.dialogHide\", onCustomerChatDialogHide);\n    }\n  }\n\n  createMarkup() {\n    const {\n      pageId,\n      htmlRef,\n      minimized,\n      themeColor,\n      loggedInGreeting,\n      loggedOutGreeting,\n      greetingDialogDisplay,\n      greetingDialogDelay\n    } = this.props;\n    const refAttribute = htmlRef !== undefined ? `ref=\"${htmlRef}\"` : \"\";\n    const minimizedAttribute = minimized !== undefined ? `minimized=\"${minimized}\"` : \"\";\n    const themeColorAttribute = themeColor !== undefined ? `theme_color=\"${themeColor}\"` : \"\";\n    const loggedInGreetingAttribute = loggedInGreeting !== undefined ? `logged_in_greeting=\"${loggedInGreeting}\"` : \"\";\n    const loggedOutGreetingAttribute = loggedOutGreeting !== undefined ? `logged_out_greeting=\"${loggedOutGreeting}\"` : \"\";\n    const greetingDialogDisplayAttribute = greetingDialogDisplay !== undefined ? `greeting_dialog_display=\"${greetingDialogDisplay}\"` : \"\";\n    const greetingDialogDelayAttribute = greetingDialogDelay !== undefined ? `greeting_dialog_delay=\"${greetingDialogDelay}\"` : \"\";\n    return {\n      __html: `<div\n             class=\"fb-customerchat\"\n             page_id=\"${pageId}\"\n             ${refAttribute}\n             ${minimizedAttribute}\n             ${themeColorAttribute}\n             ${loggedInGreetingAttribute}\n             ${loggedOutGreetingAttribute}\n             ${greetingDialogDisplayAttribute}\n             ${greetingDialogDelayAttribute}\n           ></div>`\n    };\n  }\n\n  render() {\n    const {\n      fbLoaded,\n      shouldShowDialog\n    } = this.state;\n\n    if (fbLoaded && shouldShowDialog !== this.props.shouldShowDialog) {\n      document.addEventListener(\"DOMNodeInserted\", event => {\n        const element = event.target;\n\n        if (element.className && typeof element.className === \"string\" && element.className.includes(\"fb_dialog\")) {\n          this.controlPlugin();\n        }\n      }, false);\n      this.subscribeEvents();\n    } // Add a random key to rerender. Reference:\n    // https://stackoverflow.com/questions/30242530/dangerouslysetinnerhtml-doesnt-update-during-render\n\n\n    return __jsx(\"div\", {\n      key: Date(),\n      dangerouslySetInnerHTML: this.createMarkup()\n    });\n  }\n\n}\n\n_defineProperty(MessengerChat, \"defaultProps\", {\n  shouldShowDialog: false,\n  htmlRef: undefined,\n  minimized: undefined,\n  themeColor: undefined,\n  loggedInGreeting: undefined,\n  loggedOutGreeting: undefined,\n  greetingDialogDisplay: undefined,\n  greetingDialogDelay: undefined,\n  autoLogAppEvents: true,\n  xfbml: true,\n  version: \"6.0\",\n  onCustomerChatDialogShow: undefined,\n  onCustomerChatDialogHide: undefined\n});\n\nexport default MessengerChat;","map":null,"metadata":{},"sourceType":"module"}