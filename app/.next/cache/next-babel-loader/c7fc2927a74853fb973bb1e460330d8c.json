{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Layout from \"../src/Layout\";\nimport LightBoard from \"../src/LightBoard\";\nimport request from \"../components/config/request\";\nimport { login } from \"../utils/auth\";\nimport Link from \"../src/Link\";\nimport Logo from \"../src/logo\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction Login() {\n  const {\n    0: username,\n    1: setUserName\n  } = useState(false);\n  const {\n    0: password,\n    1: setPassword\n  } = useState(false);\n  const {\n    0: buttonStatus,\n    1: setButtonStatus\n  } = useState(\"Đăng nhập\");\n\n  async function loginButtonClick() {\n    setButtonStatus(\"Vui lòng đợi...\");\n\n    if (username.length > 5 && password.length > 5) {\n      let response = await request({\n        body: {\n          query: `mutation($username: String, $password: String) {\n      authenticateUserWithPassword(email: $username, password: $password) {\n      token\n      item {\n          id\n          email\n          isAdmin\n          isSupporter\n          isCustomer\n      }\n      }}`,\n          variables: {\n            username,\n            password\n          }\n        }\n      });\n      let {\n        data: {\n          authenticateUserWithPassword\n        }\n      } = response;\n\n      if (authenticateUserWithPassword) {\n        let {\n          token,\n          item: {\n            id,\n            email,\n            isAdmin,\n            isSupporter,\n            isCustomer\n          }\n        } = authenticateUserWithPassword;\n        setButtonStatus(\"Đăng nhập thành công!\");\n        login({\n          token,\n          id,\n          email,\n          isAdmin,\n          isSupporter,\n          isCustomer\n        });\n      } else {\n        setButtonStatus(\"Tài khoản không tồn tại.\");\n      }\n    } else {\n      setButtonStatus(\"Kiểm tra và thử lại\");\n    }\n  }\n\n  return __jsx(Layout, null, __jsx(Container, {\n    maxWidth: \"sm\",\n    style: {\n      padding: 8\n    }\n  }, __jsx(LightBoard, null, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    justify: \"center\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 10\n  }, __jsx(Logo, null)), __jsx(Grid, {\n    item: true\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    style: {\n      marginBottom: 34\n    }\n  }, \"\\u0110\\u0102NG K\\xDD T\\xC0I KHO\\u1EA2N \\u0110\\u1EC2 KH\\xC1M PH\\xC1 TH\\u1EBE GI\\u1EDAI HUY\\u1EC0N B\\xCD\")), __jsx(\"form\", {\n    noValidate: true,\n    autoComplete: \"on\"\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"username\",\n    label: \"T\\xEAn \\u0111\\u0103ng nh\\u1EADp\",\n    onChange: e => {\n      setUserName(e.target.value);\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"password\",\n    label: \"M\\u1EADt kh\\u1EA9u\",\n    type: \"password\",\n    onChange: e => {\n      setPassword(e.target.value);\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Button, {\n    style: {\n      backgroundColor: \"#76552a\",\n      color: \"#dab857\",\n      marginTop: 21,\n      marginBottom: 21\n    },\n    fullWidth: true // variant=\"outlined\"\n    ,\n    onClick: async () => await loginButtonClick()\n  }, buttonStatus)), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Link, {\n    href: \"/signup\"\n  }, \"\\u0110\\u0103ng k\\xFD\"))))))));\n}\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}