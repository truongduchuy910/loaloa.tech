{"version":3,"file":"static/webpack/static/development/pages/index.js.6842bdad67b11e7e1e2a.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport fetch from \"isomorphic-fetch\";\nimport { request } from \"graphql-request\";\nimport Copyright from \"../src/Copyright\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Container from \"@material-ui/core/Container\";\nimport Chip from \"@material-ui/core/Chip\";\nimport StackGrid from \"react-stack-grid\";\nimport CodeIcon from \"@material-ui/icons/Code\";\nimport { useState, useEffect } from \"react\";\nimport formatMoney from \"../utils/formatMoney\";\nexport default function Index({\n  allDesigns,\n  allSettings,\n  allMaintains,\n  allTemplates,\n  url\n}) {\n  let [width, setWidth] = useState();\n  let [height, setHeight] = useState();\n  let [designs, setDesigns] = useState(allDesigns);\n  let [settings, setSettings] = useState(allSettings);\n  let [maintains, setMaintains] = useState(allMaintains);\n  let [price, setPrice] = useState(0);\n  let [maintainPrice, setMaintainPrice] = useState(0);\n  let [guide, setGuide] = useState(\"Nhấn chọn để báo giá!\");\n  async function getPrice() {\n    let designs_id = [];\n    designs.map(design => {\n      if (design.choosed) designs_id.push(design.id);\n    });\n    let settings_id = [];\n    settings.map(setting => {\n      if (setting.choosed) settings_id.push(setting.id);\n    });\n    let maintains_id = [];\n    maintains.map(maintain => {\n      if (maintain.choosed) maintains_id.push(maintain.id);\n    });\n    if (designs_id.length && settings_id.length && maintains_id.length) {\n      let res = await request(\n        url,\n        `query($designs: [ID], $settings: [ID], $maintains: [ID]) {\n  design: allPricings(where: { design_every: { id_in: $designs } }) {\n    price\n  }\n  setting: allPricings(where: { setting_every: { id_in: $settings } }) {\n    price\n  }\n  intergrate: allPricings(\n    where: {\n      design_every: { id_in: $designs }\n      setting_every: { id_in: $settings }\n    }\n  ) {\n    price\n  }\n  maintain: allPricings(where: { maintain_some: { id_in: $maintains } }) {\n    price\n  }\n}`,\n        { designs: designs_id, settings: settings_id, maintains: maintains_id }\n      );\n      let sum = 0;\n      let { design, setting, intergrate, maintain } = res;\n      design.map(e => (sum += e.price));\n      setting.map(e => (sum += e.price));\n      setPrice(sum);\n      sum = 0;\n      maintain.map(e => (sum += e.price));\n      setMaintainPrice(sum);\n    } else {\n    }\n  }\n  useEffect(() => {\n    window.addEventListener(\"resize\", setWidth(window.innerWidth));\n    window.addEventListener(\"resize\", setHeight(window.innerHeight));\n    getPrice();\n  });\n  return (\n    <Grid container spacing={0} justify=\"center\" alignItems=\"center\">\n      <Grid item xs={12} style={{ backgroundColor: \"#212121\" }}>\n        <Container maxWidth=\"lg\">\n          <Grid item xs={12} container justify=\"center\" alignItems=\"center\">\n            <Grid item sm={7} md={6}>\n              <Typography\n                variant=\"h5\"\n                align=\"center\"\n                style={{\n                  marginTop: 21,\n                  marginBottom: 21,\n                  color: \"white\",\n                  fontWeight: 800\n                }}\n              >\n                Thiết kế website/app phân khúc phổ thông\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" color=\"secondary\">\n                Giúp bạn sở hữu một website/app đầy sáng tạo với công nghệ mới\n                nhất được hàng triệu người sử dụng.\n                <br />\n                <CodeIcon color=\"secondary\" />\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" color=\"secondary\">\n                Hân hạnh được hợp tác!\n              </Typography>\n            </Grid>\n            <Grid item sm={5} md={6}>\n              <img\n                style={{ width: \"100%\", padding: 21 }}\n                src=\"/img/development.png\"\n              />\n            </Grid>\n          </Grid>\n        </Container>\n      </Grid>\n      <Grid item xs={12}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n          <path\n            fill=\"#212121\"\n            fillOpacity=\"1\"\n            d=\"M0,32L120,32C240,32,480,32,720,74.7C960,117,1200,203,1320,245.3L1440,288L1440,0L1320,0C1200,0,960,0,720,0C480,0,240,0,120,0L0,0Z\"\n          ></path>\n        </svg>\n      </Grid>\n      <Grid item xs={12} style={{ marginTop: width > 768 ? -75 : 0 }}>\n        <Container maxWidth=\"lg\">\n          <Typography\n            variant=\"body2\"\n            color=\"secondary\"\n            align=\"center\"\n            style={{ marginTop: 21 }}\n          >\n            GIỚI THIỆU\n          </Typography>\n          <Typography variant=\"h5\" align=\"center\" style={{ fontWeight: 800 }}>\n            Nhanh, Rẻ, Đẹp, Hiện Đại.\n            <Typography\n              variant=\"body1\"\n              color=\"secondary\"\n              align=\"center\"\n              style={{ marginBottom: 21 }}\n            >\n              Là những gì chúng tôi có và hy vọng mang lại cho bạn nhiều hơn thế\n              nữa.\n            </Typography>\n          </Typography>\n          <Grid item xs={12} container justify=\"center\" alignItems=\"center\">\n            {allTemplates.map(template => (\n              <Grid item xs={6} sm={6} md={4} lg={2} key={template.id}>\n                <img src={template.file.publicUrl} style={{ width: \"100%\" }} />\n              </Grid>\n            ))}\n          </Grid>\n          <Typography\n            variant=\"body2\"\n            color=\"secondary\"\n            align=\"center\"\n            style={{ marginTop: 34 }}\n          >\n            BẠN CÓ YÊU CẦU GÌ?\n          </Typography>\n          <Typography variant=\"h5\" align=\"center\" style={{ fontWeight: 800 }}>\n            {guide}\n          </Typography>\n\n          <Typography variant=\"body1\" color=\"primary\" align=\"center\">\n            {formatMoney(price, 0)} - đ\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"secondary\"\n            align=\"center\"\n            style={{ marginBottom: 21 }}\n          >\n            {formatMoney(maintainPrice, 0)} - đ / năm\n          </Typography>\n          <Typography variant=\"h6\" style={{ marginTop: 21 }}>\n            Chức năng\n          </Typography>\n          <Typography variant=\"body1\" color=\"secondary\">\n            Chọn các chức năng và thành phần bạn muốn xuất hiện trên website/app\n            của mình.\n          </Typography>\n          {settings.map(setting => (\n            <Chip\n              key={setting.id}\n              style={{ margin: 5 }}\n              label={setting.name}\n              onClick={() => {\n                setting.choosed = !Boolean(setting.choosed);\n                let newSettinngs = [...settings];\n                setSettings(newSettinngs);\n              }}\n              color={setting.choosed ? \"primary\" : \"default\"}\n              variant=\"outlined\"\n              size=\"small\"\n            />\n          ))}\n          <Typography variant=\"h6\" style={{ marginTop: 21 }}>\n            Giao diện\n          </Typography>\n          <Typography variant=\"body1\" color=\"secondary\">\n            Lựa chọn mức độ, phong cách giao diện.\n          </Typography>\n          {designs.map(design => (\n            <Chip\n              key={design.id}\n              style={{ margin: 5 }}\n              label={design.name}\n              onClick={() => {\n                design.choosed = !Boolean(design.choosed);\n                let newDesigns = [...designs];\n                setDesigns(newDesigns);\n              }}\n              color={design.choosed ? \"primary\" : \"default\"}\n              variant=\"outlined\"\n              size=\"small\"\n            />\n          ))}\n          <Typography variant=\"h6\" style={{ marginTop: 21 }}>\n            Duy trì\n          </Typography>\n          <Typography variant=\"body1\" color=\"secondary\">\n            Một website/app có tốc độ tải (load) nhanh giúp nâng cao trải nghiệm\n            khách hàng\n          </Typography>\n          {maintains.map(maintain => (\n            <Chip\n              key={maintain.id}\n              style={{ margin: 5 }}\n              label={maintain.name}\n              onClick={() => {\n                maintain.choosed = !Boolean(maintain.choosed);\n                let newMaintain = [...maintains];\n                setMaintains(newMaintain);\n              }}\n              color={maintain.choosed ? \"primary\" : \"default\"}\n              variant=\"outlined\"\n              size=\"small\"\n            />\n          ))}\n          <Typography\n            variant=\"body2\"\n            color=\"secondary\"\n            align=\"center\"\n            style={{ marginTop: 34 }}\n          >\n            <CodeIcon color=\"secondary\" />\n          </Typography>\n          <Typography variant=\"h5\" align=\"center\" style={{ fontWeight: 800 }}>\n            Hoặc chỉ cần gửi bài viết, hình ảnh.\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"secondary\"\n            align=\"center\"\n            style={{ marginBottom: 13, marginTop: 13 }}\n          >\n            Loa Loa Teams Sẽ Bố Trí Bài Viết, Hình Ảnh. Sáng Tạo Giao Diện Tương\n            Xứng Với Thương Hiệu Của Bạn.\n          </Typography>\n\n          <Typography\n            variant=\"body1\"\n            color=\"primary\"\n            align=\"center\"\n            style={{ marginBottom: 21 }}\n          >\n            6.000.000\n          </Typography>\n        </Container>\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        container\n        style={{ backgroundColor: \"#212121\", marginTop: 21, padding: 21 }}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n          <path\n            fill=\"#212121\"\n            fillOpacity=\"1\"\n            d=\"M0,32L120,32C240,32,480,32,720,74.7C960,117,1200,203,1320,245.3L1440,288L1440,0L1320,0C1200,0,960,0,720,0C480,0,240,0,120,0L0,0Z\"\n          ></path>\n        </svg>\n        <Container maxWidth=\"lg\">\n          <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={6} sm={5} md={4} lg={3}>\n              <img\n                style={{ width: \"100%\", padding: 21 }}\n                src=\"/img/coder.png\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={5} md={4} lg={3}>\n              <Typography\n                variant=\"h6\"\n                align=\"center\"\n                style={{ color: \"white\" }}\n              >\n                Liên Hệ\n              </Typography>\n              <Typography variant=\"body1\" align=\"center\" color=\"secondary\">\n                Trần Ngọc Huy\n                <br />\n                100 Nguyễn Lương Bằng, Liên Chiểu, Đà Nẵng.\n                <br />\n                0332813077\n                <br />\n                truongduchuy910@gmail.com\n              </Typography>\n              <Typography variant=\"body1\" color=\"secondary\"></Typography>\n              <Typography variant=\"body1\" color=\"secondary\"></Typography>\n            </Grid>\n          </Grid>\n          <Copyright />\n        </Container>\n      </Grid>\n    </Grid>\n  );\n}\nIndex.getInitialProps = async ctx => {\n  var a = \"\";\n  if (process.env.NODE_ENV == \"development\") a = \"http://\";\n  else a = \"https://\";\n  if (ctx.req) {\n    var url = a + ctx.req.headers.host + \"/admin/api\";\n  } else {\n    var url = window.location.origin + \"/admin/api\";\n  }\n  let response = await request(\n    url,\n    `query {\n  allDesigns {\n    id\n    name\n  }\n  allSettings {\n    id \n    name \n  }\n  allMaintains {\n    id\n    name \n  }\n  allTemplates {\n    id\n    file {\n      publicUrl\n    }\n  }\n}\n`\n  );\n  response.url = url;\n  return response;\n};\n"],"mappings":"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","sourceRoot":""}